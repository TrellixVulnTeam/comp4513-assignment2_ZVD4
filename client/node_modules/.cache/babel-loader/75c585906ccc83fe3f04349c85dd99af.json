{"ast":null,"code":"var _jsxFileName = \"C:\\\\web3\\\\assignment2-web3\\\\comp4513-assignment2\\\\client\\\\src\\\\components\\\\FilterBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilterBox = props => {\n  _s();\n\n  const [filter, updateFilter] = useState({});\n  const [beforeCheck, setBeforeCheck] = useState({\n    status: true\n  });\n  const [afterCheck, setAfterCheck] = useState({\n    status: true\n  });\n  useEffect(() => {\n    //if title is set from search container, apply the filter upon first render of page.\n    if (props.title) {\n      updateFilter({\n        title: props.title\n      });\n      props.updateFilteredData({\n        title: props.title\n      });\n    } else {\n      props.updateFilteredData({});\n    }\n  }, []); //handles all field changes.\n\n  const handleFieldClick = e => {\n    const tempStateObj = { ...filter\n    }; //if a field becomes empty, remove it from state.\n\n    if (e.target.value === '') {\n      delete tempStateObj[e.target.name];\n    } else {\n      //undergo necessary state updates.\n      tempStateObj[e.target.name] = e.target.value; //If it is for the before or after fields, must update the before and after states as these are distinct\n      //due to their checkbox functionality/processing.\n\n      if (e.target.name === 'before') {\n        setBeforeCheck({\n          status: false,\n          value: e.target.value\n        });\n      }\n\n      if (e.target.name === 'after') {\n        setAfterCheck({\n          status: false,\n          value: e.target.value\n        });\n      }\n    } //update filter state.\n\n\n    updateFilter(tempStateObj);\n  }; //process the form submission up when \"filter\" clicked.\n\n\n  const handleSubmit = e => {\n    props.updateFilteredData(filter);\n    e.preventDefault();\n  }; //Checkbox functionality, of enabling and disabling values entered processed.\n\n\n  const handleCheckBoxClick = e => {\n    const tempStateObj = { ...filter\n    };\n\n    if (e.target.name === 'before' && beforeCheck.status === false) {\n      setBeforeCheck({\n        status: true,\n        value: beforeCheck.value\n      });\n      delete tempStateObj['before'];\n    } else {\n      if (e.target.name === 'before' && beforeCheck.status === true) {\n        setBeforeCheck({\n          status: false,\n          value: beforeCheck.value\n        });\n        tempStateObj.before = beforeCheck.value;\n      } else {\n        if (e.target.name === 'after' && afterCheck.status === false) {\n          setAfterCheck({\n            status: true,\n            value: afterCheck.value\n          });\n          delete tempStateObj['after'];\n        } else {\n          if (e.target.name === 'after' && afterCheck.status === true) {\n            setAfterCheck({\n              status: false,\n              value: afterCheck.value\n            });\n            tempStateObj.after = afterCheck.value;\n          }\n        }\n      }\n    }\n\n    updateFilter(tempStateObj);\n  }; //upon reset of form fields - all state must be emptied.\n\n\n  const resetFilter = e => {\n    updateFilter({});\n    setBeforeCheck({\n      status: true\n    });\n    setAfterCheck({\n      status: true\n    });\n  };\n\n  const updateBoxForFave = () => {\n    props.updateFaveBox();\n    props.updateIsChecked();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"filterBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"filtersAndCheck\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"checkBoxDiv\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"checkboxFave\",\n          onChange: updateBoxForFave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 32\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"filterTitle\",\n        children: \"Play Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"filterContentBox\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"searchTitleBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            id: \"searchTitleInput\",\n            placeholder: \"Search Title\",\n            onChange: handleFieldClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"searchYearBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"year\",\n            id: \"yearTitle\",\n            children: \" Year \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 65\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"beforeSearch\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"beforeCheckBox\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"before\",\n                onChange: handleCheckBoxClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"before\",\n              name: \"before\",\n              id: \"labelBefore\",\n              children: [\"Before\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"before\",\n                id: \"inputBefore\",\n                disabled: beforeCheck.status,\n                onChange: handleFieldClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"afterSearch\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"afterCheckBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"after\",\n                onChange: handleCheckBoxClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"after\",\n                name: \"after\",\n                id: \"labelAfter\",\n                children: [\"After\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"after\",\n                  id: \"inputAfter\",\n                  disabled: afterCheck.status,\n                  onChange: handleFieldClick\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"genreBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"genre\",\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"genre\",\n            id: \"genre\",\n            onChange: handleFieldClick,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              defaultValue: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"genre\",\n              value: \"comedy\",\n              children: \"comedy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"genre\",\n              value: \"tragedy\",\n              children: \"tragedy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"genre\",\n              value: \"history\",\n              children: \"history\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"filterButtons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"filterButton\",\n            children: \" Filter \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"reset\",\n            id: \"clearButton\",\n            onClick: resetFilter,\n            children: \" Clear \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilterBox, \"YjpHRu7DGtypwwOGDIIrdI3cTUU=\");\n\n_c = FilterBox;\nexport default FilterBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterBox\");","map":{"version":3,"sources":["C:/web3/assignment2-web3/comp4513-assignment2/client/src/components/FilterBox.jsx"],"names":["React","useState","useEffect","FilterBox","props","filter","updateFilter","beforeCheck","setBeforeCheck","status","afterCheck","setAfterCheck","title","updateFilteredData","handleFieldClick","e","tempStateObj","target","value","name","handleSubmit","preventDefault","handleCheckBoxClick","before","after","resetFilter","updateBoxForFave","updateFaveBox","updateIsChecked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst FilterBox = (props) => {\r\n  const [filter, updateFilter] = useState({});\r\n  const [beforeCheck, setBeforeCheck] = useState({status: true})\r\n  const [afterCheck, setAfterCheck] = useState({status: true});\r\n\r\nuseEffect (() => {\r\n\r\n  //if title is set from search container, apply the filter upon first render of page.\r\n  if (props.title) {\r\n    updateFilter({title: props.title})\r\n    props.updateFilteredData({title: props.title});\r\n  } else {\r\n    props.updateFilteredData({});\r\n  }\r\n}, []\r\n);\r\n  //handles all field changes.\r\n  const handleFieldClick = (e) => {\r\n\r\n    const tempStateObj = {...filter};\r\n\r\n    //if a field becomes empty, remove it from state.\r\n    if (e.target.value === '' ) {\r\n        delete tempStateObj[e.target.name];\r\n    } else {\r\n    //undergo necessary state updates.\r\n    tempStateObj[e.target.name] = e.target.value;\r\n\r\n    //If it is for the before or after fields, must update the before and after states as these are distinct\r\n    //due to their checkbox functionality/processing.\r\n\r\n     if (e.target.name === 'before') {\r\n        setBeforeCheck({status: false, value: e.target.value })\r\n     }\r\n\r\n      if (e.target.name === 'after') {\r\n       setAfterCheck({status: false, value: e.target.value  })\r\n     }\r\n    \r\n    }\r\n \r\n    //update filter state.\r\n    updateFilter(tempStateObj);\r\n\r\n  }\r\n\r\n  //process the form submission up when \"filter\" clicked.\r\n const handleSubmit = e => {\r\n    props.updateFilteredData(filter);\r\n    e.preventDefault(); \r\n  }\r\n\r\n  //Checkbox functionality, of enabling and disabling values entered processed.\r\n  const handleCheckBoxClick = e => {\r\n  \r\n    const tempStateObj = {...filter};\r\n\r\n    if (e.target.name === 'before' && beforeCheck.status === false) {\r\n      setBeforeCheck({status: true, value: beforeCheck.value});\r\n      delete tempStateObj['before'];\r\n      \r\n    } else  {\r\n      if (e.target.name === 'before' &&  beforeCheck.status === true) {\r\n        setBeforeCheck({status: false, value: beforeCheck.value});\r\n        tempStateObj.before = beforeCheck.value;\r\n \r\n    } else {\r\n      if (e.target.name === 'after' &&  afterCheck.status === false) { \r\n        setAfterCheck({status: true, value: afterCheck.value});\r\n        delete tempStateObj['after'];\r\n    \r\n    } else {\r\n\r\n    if (e.target.name === 'after' &&  afterCheck.status === true) {\r\n      \r\n      setAfterCheck({status: false, value: afterCheck.value});\r\n      tempStateObj.after =  afterCheck.value;\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n    updateFilter(tempStateObj);\r\n   \r\n  }\r\n\r\n  //upon reset of form fields - all state must be emptied.\r\n  const resetFilter = e => {\r\n    updateFilter({});\r\n    setBeforeCheck({status: true});\r\n    setAfterCheck({status: true});\r\n  }\r\n\r\n  const updateBoxForFave = () => {\r\n    props.updateFaveBox();\r\n    props.updateIsChecked();\r\n  }\r\n  \r\n\r\n    return (\r\n    <div id=\"filterBox\">\r\n      <div id=\"filtersAndCheck\">\r\n        <div id=\"checkBoxDiv\"> <input type=\"checkbox\" className=\"checkboxFave\" onChange={updateBoxForFave}/> </div>\r\n        <h1 id=\"filterTitle\">Play Filters</h1>\r\n      </div>\r\n      <hr/>\r\n      <div id=\"filterContentBox\">\r\n        \r\n        <form onSubmit = {handleSubmit}>\r\n          <div id=\"searchTitleBox\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <br/>\r\n            <input type=\"text\" name=\"title\" id=\"searchTitleInput\" placeholder=\"Search Title\" onChange = {handleFieldClick}></input>\r\n          </div>\r\n          <div id=\"searchYearBox\">\r\n            <label htmlFor=\"year\" id=\"yearTitle\"> Year </label> <br />\r\n\r\n            <div id=\"beforeSearch\">\r\n              <div id=\"beforeCheckBox\">\r\n                <input type=\"checkbox\" name=\"before\" onChange={handleCheckBoxClick} />\r\n              </div>\r\n              <label htmlFor=\"before\" name=\"before\" id=\"labelBefore\">\r\n                Before\r\n                <input type=\"text\" name=\"before\" id=\"inputBefore\" disabled = {beforeCheck.status} onChange = {handleFieldClick}/>\r\n              </label>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <div id=\"afterSearch\"> \r\n              <div id=\"afterCheckBox\">\r\n                <input type=\"checkbox\"  name=\"after\" onChange={handleCheckBoxClick}/> \r\n                <label htmlFor=\"after\" name=\"after\" id=\"labelAfter\"> \r\n                  After\r\n                  <input type=\"text\" name=\"after\" id=\"inputAfter\" disabled = {afterCheck.status} onChange = {handleFieldClick} />\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"genreBox\">\r\n            <label htmlFor=\"genre\">Genre</label>\r\n            <br/>\r\n            <select name=\"genre\" id=\"genre\" onChange = {handleFieldClick}>\r\n              <option  defaultValue = ''></option>\r\n              <option name = \"genre\" value=\"comedy\">comedy</option>\r\n              <option name = \"genre\" value=\"tragedy\">tragedy</option>\r\n              <option name = \"genre\" value=\"history\">history</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div id=\"filterButtons\">\r\n            <button type=\"submit\" id=\"filterButton\"> Filter </button>\r\n            <button type=\"reset\" id=\"clearButton\" onClick={resetFilter}> Clear </button>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n  </div>\r\n    \r\n    );\r\n    \r\n};\r\n\r\nexport default FilterBox;"]},"metadata":{},"sourceType":"module"}