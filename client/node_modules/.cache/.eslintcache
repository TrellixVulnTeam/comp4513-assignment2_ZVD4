[{"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\index.js":"1","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\App.js":"2","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\reportWebVitals.js":"3","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\HomePage.jsx":"4","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\PlayDetailPage.jsx":"5","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\DefaultPage.jsx":"6","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\SearchContainer.jsx":"7","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\HeaderBar.jsx":"8","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\FavoritesBox.jsx":"9","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\FilterBox.jsx":"10","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\FavoritesBoxDetails.jsx":"11","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\ListBox.jsx":"12","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\TabComponent\\Tabs.jsx":"13","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\FavoriteItem.jsx":"14","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\FavoriteItemDetails.jsx":"15","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\TabComponent\\DetailsTab.jsx":"16","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\ListBoxItem.jsx":"17","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\TabComponent\\CharactersTab.jsx":"18","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\TabComponent\\TextTab.jsx":"19"},{"size":613,"mtime":1636413390844,"results":"20","hashOfConfig":"21"},{"size":3652,"mtime":1639158724915,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1636413390844,"results":"23","hashOfConfig":"21"},{"size":954,"mtime":1636413390844,"results":"24","hashOfConfig":"21"},{"size":8771,"mtime":1639158563722,"results":"25","hashOfConfig":"21"},{"size":9123,"mtime":1639161702654,"results":"26","hashOfConfig":"21"},{"size":1434,"mtime":1638980410679,"results":"27","hashOfConfig":"21"},{"size":4026,"mtime":1639161493398,"results":"28","hashOfConfig":"21"},{"size":511,"mtime":1636413390844,"results":"29","hashOfConfig":"21"},{"size":5358,"mtime":1638980410674,"results":"30","hashOfConfig":"21"},{"size":546,"mtime":1636413390844,"results":"31","hashOfConfig":"21"},{"size":1597,"mtime":1638924189934,"results":"32","hashOfConfig":"21"},{"size":2292,"mtime":1636413390844,"results":"33","hashOfConfig":"21"},{"size":963,"mtime":1638980410670,"results":"34","hashOfConfig":"21"},{"size":979,"mtime":1638980410670,"results":"35","hashOfConfig":"21"},{"size":566,"mtime":1636413390844,"results":"36","hashOfConfig":"21"},{"size":1354,"mtime":1638980410676,"results":"37","hashOfConfig":"21"},{"size":763,"mtime":1636413390844,"results":"38","hashOfConfig":"21"},{"size":2285,"mtime":1636417296644,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1y0ip7s",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\index.js",[],["84","85"],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\App.js",["86"],"import HomePage from \"./components/HomePage\";\r\nimport DefaultPage from \"./components/DefaultPage\";\r\nimport PlayDetailPage from \"./components/PlayDetailPage\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [userData, setUserData] = useState(null);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [like, setLike] = useState([]);\r\n  const [currentPlay, setCurrentPlay] = useState([]);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [showFavorites, setShowFavorites] = useState(true); \r\n\r\n\r\nconst logout = () => {\r\n  window.location.assign('http://localhost:8080/logout');\r\n}\r\n\r\n  useEffect(() => {\r\n\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"http://localhost:8080/user\",\r\n    }).then((res) => {\r\n      setUserData(res.data);\r\n      console.log(res.data);\r\n    });\r\nconsole.log(userData);\r\n \r\n},  []);\r\n\r\nconst populateAllPlays = () => {\r\n  Axios({\r\n    method: \"GET\",\r\n    withCredentials: true,\r\n    url: \"http://comp4513-assignment2.herokuapp.com/api/list\",\r\n  }).then((res) => {\r\n    console.log(res.data);\r\n    localStorage.setItem(\"playData\", JSON.stringify(res.data));\r\n    setData(res.data);\r\n    console.log(res.data);\r\n  });  \r\n}\r\n\r\nuseEffect(() => {\r\n\r\n\r\n  populateAllPlays();\r\n\r\n  if (localStorage.getItem(\"playData\") == null) {\r\n    populateAllPlays();\r\n  } else {\r\n    setData(JSON.parse(localStorage.getItem(\"playData\")));\r\n  }\r\n\r\n},  []);\r\n\r\n  const addLikes = (play) => {\r\n    let temp = [...like];\r\n    if (!temp.find((e) => e.title === play.title)) {\r\n      temp.push(play);\r\n      setLike(temp);\r\n    } else {\r\n      console.log(\"already in list\");\r\n    }\r\n  };\r\n\r\n  const removeLikes = (play) => {\r\n    const temp = [...like];\r\n    const index = temp.indexOf(play);\r\n    temp.splice(index, 1);\r\n    setLike(temp);\r\n  };\r\n\r\n  const updateCurrentPlay = (clickedPlay) => {\r\n    setCurrentPlay(clickedPlay);\r\n    \r\n  };\r\n\r\n\r\n  const updateIsChecked = () => {\r\n    setIsChecked(!isChecked);\r\n  }\r\n\r\n  const updateFaveBox = () => {\r\n    setShowFavorites(!showFavorites);\r\n  }\r\n  console.log(userData);\r\n  return (\r\n    <main>\r\n      <HashRouter basename='/'>\r\n      <Route path=\"/\" exact component={HomePage} />\r\n      <Route path=\"/home\" exact component={HomePage}/>\r\n        <Route path=\"/default\">\r\n          \r\n  \r\n\r\n        <DefaultPage\r\n              mainData={data}\r\n              userData={userData}\r\n              logout={logout}\r\n              setFilteredData={setFilteredData}\r\n              plays={filteredData}\r\n              likedPlays={like}\r\n              addToLike={addLikes}\r\n              removeFromLike={removeLikes}\r\n              updateCurrent={updateCurrentPlay}\r\n              current={currentPlay}\r\n              isChecked={isChecked}\r\n              updateIsChecked={updateIsChecked}\r\n              showFavorites={showFavorites}\r\n              updateFaveBox={updateFaveBox}\r\n\r\n            />\r\n          \r\n        </Route>\r\n      <Route path=\"/playDetails\">\r\n\r\n    \r\n        <PlayDetailPage\r\n          plays={data}\r\n          likedPlays={like}\r\n          addToLike={addLikes}\r\n          removeFromLike={removeLikes}\r\n          current={currentPlay}\r\n          updateCurrent={updateCurrentPlay}\r\n          filters={filteredData}\r\n\r\n          isChecked={isChecked}\r\n          updateIsChecked={updateIsChecked}\r\n\r\n          showFavorites={showFavorites}\r\n          updateFaveBox={updateFaveBox}\r\n        />\r\n  \r\n      </Route>\r\n     </ HashRouter>\r\n    </main>\r\n  );\r\n}\r\nexport default App;\r\n","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\reportWebVitals.js",[],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\HomePage.jsx",["87"],"import React, { useEffect }from \"react\";\r\nimport SearchContainer from \"./SearchContainer\";\r\n\r\nconst HomePage = (props) => {\r\n\r\n  \r\n  {useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      console.log('This will run after 5 seconds!')\r\n    }, 5000);\r\n    clearTimeout(timer);\r\n    \r\n  }, [])}\r\n\r\n  return (\r\n\r\n\r\n      <div className=\"homePage\">\r\n        <div id=\"homeSearch\"> <SearchContainer /> \r\n        </div>\r\n        \r\n          <div id=\"heroCredit\">\r\n            Photo by{\" \"}\r\n            <a href=\"https://unsplash.com/@maxmuselmann?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">\r\n              Max Muselmann\r\n            </a>{\" \"}\r\n            on{\" \"}\r\n            <a href=\"https://unsplash.com/s/photos/shakespeare?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">\r\n              Unsplash\r\n            </a>\r\n          \r\n        </div>\r\n        \r\n      </div>\r\n  );\r\n};\r\nexport default HomePage;\r\n","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\PlayDetailPage.jsx",["88"],"import React, { useEffect, useState } from \"react\";\r\nimport HeaderBar from \"./HeaderBar\";\r\nimport FavoriteBoxDetails from \"./FavoritesBoxDetails\";\r\nimport Tabs from \"./TabComponent/Tabs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"../App.css\";\r\n\r\nconst PlayDetailPage = (props) => {\r\n  const [tab, setTab] = useState(\"Details\");\r\n  const [currentAct, setCurrentAct] = useState(\"ACT I\");\r\n  const [currentScene, setCurrentScene] = useState(\"SCENE I\");\r\n  const [currentSpeaker, setCurrentSpeaker] = useState(\"\");\r\n  const [highlightedWord, setHighlightedWord] = useState(\"\");\r\n\r\n  const location = useLocation();\r\n\r\n  const tabIsText = (tab) => {\r\n    setTab(tab);\r\n  };\r\n\r\n  const updateTabThroughClick = () => {\r\n    setTab(\"Details\");\r\n  };\r\n\r\n  const handleCurrentAct = (e) => {\r\n    console.log(e.target.value);\r\n    setCurrentAct(e.target.value);\r\n  };\r\n\r\n  const handleCurrentScene = (e) => {\r\n    console.log(e.target.value);\r\n    setCurrentScene(e.target.value);\r\n  };\r\n\r\n  const handleCurrentSpeaker = (e) => {\r\n    if (e.target.value !== \"\" && e.target.value !== \"clear\") {\r\n      console.log(e.target.value);\r\n      setCurrentSpeaker(e.target.value);\r\n    } else if (e.target.value === \"clear\") {\r\n      setCurrentSpeaker(\"\");\r\n      console.log(\"Search is cleared -->\" + e.target.value);\r\n    }\r\n  };\r\n\r\n  const addToLike = () => {\r\n    props.addToLike(props.current);\r\n  };\r\n\r\n  const handleHighlightedWord = (e) => {\r\n    console.log(e.target.value);\r\n    setHighlightedWord(e.target.value);\r\n  };\r\n\r\n  useEffect((props) => {\r\n    const getInfo = async () => {\r\n      try {\r\n        const url =\r\n          \"https://www.randyconnolly.com/funwebdev/3rd/api/shakespeare/play.php?name=\" +\r\n          props.current.id;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        localStorage.setItem(\"playInfo\", JSON.stringify(data));\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    // invoke the async function\r\n    getInfo();\r\n  }, []);\r\n\r\n  const updateBoxForFave = () => {\r\n    props.updateFaveBox();\r\n    props.updateIsChecked();\r\n  };\r\n\r\n  if (tab === \"Text\") {\r\n    let i = [];\r\n    i.push(JSON.parse(localStorage.getItem(\"playInfo\")));\r\n\r\n    return (\r\n      <div className=\"playDetailsPage\">\r\n         <HeaderBar userData = {location.state.userInfo.userData} logout = {location.state.userInfo.logout}/> \r\n\r\n        <div id=\"playDetailsBox\">\r\n          {props.showFavorites && props.isChecked === false ? (\r\n            <div id=\"detailsFavoriteList\">\r\n              <FavoriteBoxDetails\r\n                plays={props.likedPlays}\r\n                removeFromLike={props.removeFromLike}\r\n                updateCurrent={props.updateCurrent}\r\n                updateTab={updateTabThroughClick}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div id=\"hiddenFaveBox\"> </div>\r\n          )}\r\n\r\n          <div id=\"playTitleBox\">\r\n            <div id=\"checkAndTitle\">\r\n              <div id=\"checkBoxDiv\">\r\n                {\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"checkboxFave\"\r\n                  onChange={updateBoxForFave}\r\n                />{\" \"}\r\n              </div>\r\n              <h1 id=\"playTitle\">{props.current.title}</h1>\r\n            </div>\r\n\r\n            <hr></hr>\r\n\r\n            <div id=\"formBox\">\r\n              <form id=\"textFilterBox\">\r\n                {/* This handles the act filter and adds current act*/}\r\n\r\n                <select name=\"act\" id=\"act\" onChange={handleCurrentAct}>\r\n                  {i[0].acts.map((a) => {\r\n                    return (\r\n                      <option value={a.name} key={a.name}>\r\n                        {\" \"}\r\n                        {a.name}{\" \"}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n\r\n                {/* This handles the scene filter corresponding to the act*/}\r\n                <select name=\"scene\" id=\"scene\" onChange={handleCurrentScene}>\r\n                  {i[0].acts.map((act) => {\r\n                    if (act.name === currentAct) {\r\n                      return act.scenes.map((s) => {\r\n                        return (\r\n                          <option value={s.name} key={s.name}>\r\n                            {\" \"}\r\n                            {s.name}{\" \"}\r\n                          </option>\r\n                        );\r\n                      });\r\n                    }\r\n                  })}\r\n                </select>\r\n              </form>\r\n\r\n              <form className=\"playerSearch\">\r\n                {/* This handles the word filter corresponding to the speaker*/}\r\n                <select\r\n                  name=\"speaker\"\r\n                  id=\"speaker\"\r\n                  onChange={handleCurrentSpeaker}\r\n                >\r\n                  <option value=\"\"> Choose Player Here </option>\r\n                  {i[0].persona.map((p) => {\r\n                    return (\r\n                      <option value={p.player} key={p.player}>\r\n                        {\" \"}\r\n                        {p.player}{\" \"}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                  <option value=\"clear\"> CLEAR SEARCH </option>\r\n                </select>\r\n                <br />\r\n                <input\r\n                  id=\"highlightedWord\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={handleHighlightedWord}\r\n                />\r\n              </form>\r\n            </div>\r\n            <div id=\"textPlayDetailsButtons\">\r\n              <Link\r\n                to={{ pathname: \"/default\", state: { filters: props.filters } }}\r\n              >\r\n                <button type=\"button\" id=\"closeButton\">\r\n                  {\" \"}\r\n                  Close{\" \"}\r\n                </button>\r\n              </Link>\r\n              <button onClick={addToLike} id=\"likeButton\">\r\n                {\" \"}\r\n                ❤{\" \"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"tabsBox\">\r\n            <Tabs\r\n              current={props.current}\r\n              tab={tab}\r\n              tabIsText={tabIsText}\r\n              currentAct={currentAct}\r\n              currentScene={currentScene}\r\n              currentSpeaker={currentSpeaker}\r\n              highlightedWord={highlightedWord}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"playDetailsPage\">\r\n        <HeaderBar userData = {location.state.userInfo.userData} logout = {location.state.userInfo.logout}/> \r\n\r\n        <div id=\"playDetailsBox\">\r\n          {props.showFavorites && props.isChecked === false ? (\r\n            <div id=\"detailsFavoriteList\">\r\n              <FavoriteBoxDetails\r\n                plays={props.likedPlays}\r\n                removeFromLike={props.removeFromLike}\r\n                updateCurrent={props.updateCurrent}\r\n                updateTab={updateTabThroughClick}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div id=\"hiddenFaveBox\"> </div>\r\n          )}\r\n\r\n          <div id=\"playTitleBox\">\r\n            <div id=\"checkAndTitle\">\r\n              <div id=\"checkBoxDiv\">\r\n                {\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"checkboxFave\"\r\n                  onChange={updateBoxForFave}\r\n                />{\" \"}\r\n              </div>\r\n              <h1 id=\"playTitle\">{props.current.title}</h1>\r\n            </div>\r\n            <hr></hr>\r\n            <div id=\"playSummaryBox\">\r\n              <div id=\"synopsisBox\">{props.current.synopsis}</div>\r\n\r\n              <div id=\"playDetailsButtons\">\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/default\",\r\n                    state: { filters: props.filters },\r\n                  }}\r\n                >\r\n                  <button type=\"button\" id=\"closeButton\">\r\n                    {\" \"}\r\n                    Close{\" \"}\r\n                  </button>\r\n                </Link>\r\n                <button onClick={addToLike} id=\"likeButton\">\r\n                  {\" \"}\r\n                  ❤{\" \"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"tabsBox\">\r\n            <Tabs\r\n              current={props.current}\r\n              tab={tab}\r\n              tabIsText={tabIsText}\r\n              currentAct={currentAct}\r\n              currentScene={currentScene}\r\n              currentSpeaker={currentSpeaker}\r\n              highlightedWord={highlightedWord}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default PlayDetailPage;\r\n","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\DefaultPage.jsx",["89","90","91","92"],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\SearchContainer.jsx",[],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\HeaderBar.jsx",["93","94","95"],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\FavoritesBox.jsx",[],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\FilterBox.jsx",["96"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst FilterBox = (props) => {\r\n  const [filter, updateFilter] = useState({});\r\n  const [beforeCheck, setBeforeCheck] = useState({status: true})\r\n  const [afterCheck, setAfterCheck] = useState({status: true});\r\n\r\nuseEffect (() => {\r\n\r\n  //if title is set from search container, apply the filter upon first render of page.\r\n  if (props.title) {\r\n    updateFilter({title: props.title})\r\n    props.updateFilteredData({title: props.title});\r\n  } else {\r\n    props.updateFilteredData({});\r\n  }\r\n}, []\r\n);\r\n  //handles all field changes.\r\n  const handleFieldClick = (e) => {\r\n\r\n    const tempStateObj = {...filter};\r\n\r\n    //if a field becomes empty, remove it from state.\r\n    if (e.target.value === '' ) {\r\n        delete tempStateObj[e.target.name];\r\n    } else {\r\n    //undergo necessary state updates.\r\n    tempStateObj[e.target.name] = e.target.value;\r\n\r\n    //If it is for the before or after fields, must update the before and after states as these are distinct\r\n    //due to their checkbox functionality/processing.\r\n\r\n     if (e.target.name === 'before') {\r\n        setBeforeCheck({status: false, value: e.target.value })\r\n     }\r\n\r\n      if (e.target.name === 'after') {\r\n       setAfterCheck({status: false, value: e.target.value  })\r\n     }\r\n    \r\n    }\r\n \r\n    //update filter state.\r\n    updateFilter(tempStateObj);\r\n\r\n  }\r\n\r\n  //process the form submission up when \"filter\" clicked.\r\n const handleSubmit = e => {\r\n    props.updateFilteredData(filter);\r\n    e.preventDefault(); \r\n  }\r\n\r\n  //Checkbox functionality, of enabling and disabling values entered processed.\r\n  const handleCheckBoxClick = e => {\r\n  \r\n    const tempStateObj = {...filter};\r\n\r\n    if (e.target.name === 'before' && beforeCheck.status === false) {\r\n      setBeforeCheck({status: true, value: beforeCheck.value});\r\n      delete tempStateObj['before'];\r\n      \r\n    } else  {\r\n      if (e.target.name === 'before' &&  beforeCheck.status === true) {\r\n        setBeforeCheck({status: false, value: beforeCheck.value});\r\n        tempStateObj.before = beforeCheck.value;\r\n \r\n    } else {\r\n      if (e.target.name === 'after' &&  afterCheck.status === false) { \r\n        setAfterCheck({status: true, value: afterCheck.value});\r\n        delete tempStateObj['after'];\r\n    \r\n    } else {\r\n\r\n    if (e.target.name === 'after' &&  afterCheck.status === true) {\r\n      \r\n      setAfterCheck({status: false, value: afterCheck.value});\r\n      tempStateObj.after =  afterCheck.value;\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n    updateFilter(tempStateObj);\r\n   \r\n  }\r\n\r\n  //upon reset of form fields - all state must be emptied.\r\n  const resetFilter = e => {\r\n    updateFilter({});\r\n    setBeforeCheck({status: true});\r\n    setAfterCheck({status: true});\r\n  }\r\n\r\n  const updateBoxForFave = () => {\r\n    props.updateFaveBox();\r\n    props.updateIsChecked();\r\n  }\r\n  \r\n\r\n    return (\r\n    <div id=\"filterBox\">\r\n      <div id=\"filtersAndCheck\">\r\n        <div id=\"checkBoxDiv\"> <input type=\"checkbox\" className=\"checkboxFave\" onChange={updateBoxForFave}/> </div>\r\n        <h1 id=\"filterTitle\">Play Filters</h1>\r\n      </div>\r\n      <hr/>\r\n      <div id=\"filterContentBox\">\r\n        \r\n        <form onSubmit = {handleSubmit}>\r\n          <div id=\"searchTitleBox\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <br/>\r\n            <input type=\"text\" name=\"title\" id=\"searchTitleInput\" placeholder=\"Search Title\" onChange = {handleFieldClick}></input>\r\n          </div>\r\n          <div id=\"searchYearBox\">\r\n            <label htmlFor=\"year\" id=\"yearTitle\"> Year </label> <br />\r\n\r\n            <div id=\"beforeSearch\">\r\n              <div id=\"beforeCheckBox\">\r\n                <input type=\"checkbox\" name=\"before\" onChange={handleCheckBoxClick} />\r\n              </div>\r\n              <label htmlFor=\"before\" name=\"before\" id=\"labelBefore\">\r\n                Before\r\n                <input type=\"text\" name=\"before\" id=\"inputBefore\" disabled = {beforeCheck.status} onChange = {handleFieldClick}/>\r\n              </label>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <div id=\"afterSearch\"> \r\n              <div id=\"afterCheckBox\">\r\n                <input type=\"checkbox\"  name=\"after\" onChange={handleCheckBoxClick}/> \r\n                <label htmlFor=\"after\" name=\"after\" id=\"labelAfter\"> \r\n                  After\r\n                  <input type=\"text\" name=\"after\" id=\"inputAfter\" disabled = {afterCheck.status} onChange = {handleFieldClick} />\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"genreBox\">\r\n            <label htmlFor=\"genre\">Genre</label>\r\n            <br/>\r\n            <select name=\"genre\" id=\"genre\" onChange = {handleFieldClick}>\r\n              <option  defaultValue = ''></option>\r\n              <option name = \"genre\" value=\"comedy\">comedy</option>\r\n              <option name = \"genre\" value=\"tragedy\">tragedy</option>\r\n              <option name = \"genre\" value=\"history\">history</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div id=\"filterButtons\">\r\n            <button type=\"submit\" id=\"filterButton\"> Filter </button>\r\n            <button type=\"reset\" id=\"clearButton\" onClick={resetFilter}> Clear </button>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n  </div>\r\n    \r\n    );\r\n    \r\n};\r\n\r\nexport default FilterBox;","C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\FavoritesBoxDetails.jsx",[],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\ListBox.jsx",[],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\TabComponent\\Tabs.jsx",[],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\FavoriteItem.jsx",[],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\FavoriteItemDetails.jsx",[],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\TabComponent\\DetailsTab.jsx",[],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\ListBoxItem.jsx",[],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\TabComponent\\CharactersTab.jsx",[],"C:\\web3\\assignment2-web3\\comp4513-assignment2\\client\\src\\components\\TabComponent\\TextTab.jsx",["97","98","99","100","101"],"import React from \"react\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nconst TextTab = (props) => {\r\n\r\n  if (props.currentSpeaker === \"\") {\r\n    return (\r\n      <div className=\"TextTab\">\r\n        <h1>{props.playInfo.title}</h1>\r\n        <h2> {props.currentAct}</h2>\r\n        <h3> {props.currentScene}</h3>\r\n        <hr></hr>\r\n        <div id=\"sceneSpeeches\">\r\n          {props.playInfo.acts.map((a) => {\r\n            if (a.name === props.currentAct) {\r\n              return a.scenes.map((s, index) => {\r\n                if (s.name === props.currentScene) {\r\n                  return (\r\n                    <div id=\"actSceneDirection\" key={index}>\r\n                      <h4> {s.title} </h4>\r\n                      <h4> {s.stageDirection}</h4>\r\n                    </div>\r\n                  );\r\n                }\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    \r\n    return (\r\n      <div className=\"TextTab\">\r\n        <h1>{props.playInfo.title}</h1>\r\n        <h2> {props.currentAct}</h2>\r\n        <h3> {props.currentScene}</h3>\r\n        <hr></hr>\r\n        <div id=\"speakerSpeeches\">\r\n          {props.playInfo.acts.map((a) => {\r\n            if (a.name === props.currentAct) {\r\n              return a.scenes.map((s) => {\r\n                if (s.name === props.currentScene) {\r\n                  return s.speeches.map((speeches, index) => {\r\n                    if (speeches.speaker === props.currentSpeaker) {\r\n                      return (\r\n                        <div key={index}>\r\n                          <Highlighter\r\n                            searchWords={[props.highlightedWord]}\r\n                            textToHighlight={String(speeches.speaker)}\r\n                          />:\r\n                          <br /> \r\n                          <Highlighter\r\n                            searchWords={[props.highlightedWord]}\r\n                            textToHighlight={String(speeches.lines)}\r\n                          />\r\n                          <br /> <br />\r\n                        </div>\r\n                      );\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default TextTab;\r\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":34,"column":5,"nodeType":"108","endLine":34,"endColumn":7,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":7,"column":3,"nodeType":"112","messageId":"113","endLine":13,"endColumn":10},{"ruleId":"114","severity":1,"message":"115","line":131,"column":40,"nodeType":"116","messageId":"117","endLine":131,"endColumn":42},{"ruleId":"118","severity":1,"message":"119","line":8,"column":10,"nodeType":"120","messageId":"121","endLine":8,"endColumn":23},{"ruleId":"118","severity":1,"message":"122","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":18},{"ruleId":"106","severity":1,"message":"123","line":20,"column":6,"nodeType":"108","endLine":20,"endColumn":8,"suggestions":"124"},{"ruleId":"118","severity":1,"message":"125","line":183,"column":10,"nodeType":"120","messageId":"121","endLine":183,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":40,"column":5,"nodeType":"128","endLine":40,"endColumn":70},{"ruleId":"126","severity":1,"message":"127","line":46,"column":34,"nodeType":"128","endLine":46,"endColumn":99},{"ruleId":"126","severity":1,"message":"127","line":105,"column":25,"nodeType":"128","endLine":105,"endColumn":72},{"ruleId":"106","severity":1,"message":"129","line":17,"column":4,"nodeType":"108","endLine":17,"endColumn":6,"suggestions":"130"},{"ruleId":"114","severity":1,"message":"115","line":14,"column":40,"nodeType":"116","messageId":"117","endLine":14,"endColumn":42},{"ruleId":"114","severity":1,"message":"115","line":16,"column":46,"nodeType":"116","messageId":"117","endLine":16,"endColumn":48},{"ruleId":"114","severity":1,"message":"115","line":40,"column":40,"nodeType":"116","messageId":"117","endLine":40,"endColumn":42},{"ruleId":"114","severity":1,"message":"115","line":42,"column":39,"nodeType":"116","messageId":"117","endLine":42,"endColumn":41},{"ruleId":"114","severity":1,"message":"115","line":44,"column":59,"nodeType":"116","messageId":"117","endLine":44,"endColumn":61},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.","ArrayExpression",["133"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'CSSTransition' is defined but never used.","Identifier","unusedVar","'loadingGif' is defined but never used.","React Hook useEffect has missing dependencies: 'location.state.filters' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["134"],"'sortedPlays' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [userData]",{"range":"142","text":"143"},"Update the dependencies array to be: [location.state.filters, props]",{"range":"144","text":"145"},"Update the dependencies array to be: [props]",{"range":"146","text":"147"},[1022,1024],"[userData]",[689,691],"[location.state.filters, props]",[548,550],"[props]"]