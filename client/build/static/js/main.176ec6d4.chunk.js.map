{"version":3,"sources":["components/SearchContainer.jsx","components/HomePage.jsx","components/HeaderBar.jsx","components/FavoriteItem.jsx","components/FavoritesBox.jsx","components/FilterBox.jsx","components/ListBoxItem.jsx","components/ListBox.jsx","components/DefaultPage.jsx","components/FavoriteItemDetails.jsx","components/FavoritesBoxDetails.jsx","components/TabComponent/DetailsTab.jsx","components/TabComponent/CharactersTab.jsx","components/TabComponent/TextTab.jsx","components/TabComponent/Tabs.jsx","components/PlayDetailPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchContainer","props","Search","Input","useState","title","updateTitle","suffix","AudioOutlined","style","fontSize","color","id","placeholder","size","onChange","e","target","value","to","pathname","state","type","HomePage","useEffect","timer","setTimeout","console","log","clearTimeout","className","href","SubMenu","Menu","HeaderBar","isProfileModalVisible","setIsProfileModalVisible","isAboutModalVisible","setIsAboutModalVisible","handleProfileClose","handleAboutClose","userData","userAPILink","src","selectedKeys","mode","icon","Item","onClick","UserOutlined","PaperClipOutlined","logout","LogoutOutlined","visible","onCancel","footer","picture","thumbnail","details","firstname","lastname","city","country","membership","date_joined","FavoriteItem","updateCurrent","play","Axios","method","withCredentials","url","then","response","json","data","localStorage","setItem","JSON","stringify","removeFromLike","message","info","FavoriteBox","plays","map","p","index","updateTab","FilterBox","filter","updateFilter","status","beforeCheck","setBeforeCheck","afterCheck","setAfterCheck","updateFilteredData","handleFieldClick","tempStateObj","name","handleCheckBoxClick","before","after","updateFaveBox","updateIsChecked","onSubmit","preventDefault","htmlFor","disabled","defaultValue","ListBoxItem","userInfo","likelyDate","CSSTransition","in","timeout","classNames","appear","addToLike","H1","styled","h1","ListBox","matchesBoolean","cursor","sortTitle","sortYear","DefaultPage","location","useLocation","matchesFound","setMatchesFound","filters","setFilteredData","setsortedPlays","showFavorites","isChecked","likedPlays","updatedFilteredData","Object","keys","length","mainData","toLowerCase","forEach","d","genre","includes","push","sortData","sort","a","b","at","bt","ay","parseInt","by","FavoriteItemDetails","FavoriteBoxDetails","DetailsTab","current","wiki","gutenberg","shakespeareOrg","desc","CharactersTab","personas","parse","getItem","persona","position","player","TextTab","currentSpeaker","playInfo","currentAct","currentScene","acts","scenes","s","stageDirection","speeches","speaker","searchWords","highlightedWord","textToHighlight","String","lines","Tabs","filename","tab","tabIsText","PlayDetailPage","setTab","setCurrentAct","setCurrentScene","setCurrentSpeaker","setHighlightedWord","updateTabThroughClick","getInfo","fetch","error","updateBoxForFave","i","act","synopsis","App","setData","setUserData","filteredData","like","setLike","currentPlay","setCurrentPlay","setIsChecked","setShowFavorites","res","populateAllPlays","addLikes","temp","find","removeLikes","indexOf","splice","updateCurrentPlay","clickedPlay","basename","path","exact","component","window","assign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.176ec6d4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Input, Space} from 'antd';\r\nimport { AudioOutlined } from '@ant-design/icons';\r\n\r\nconst SearchContainer = (props) => {\r\n  const { Search } = Input;\r\n  const [title, updateTitle] = useState();\r\n\r\n  const handleInputChange = e => {\r\n    updateTitle(e.target.value);\r\n  }\r\n\r\n  const suffix = (\r\n    <AudioOutlined\r\n      style={{\r\n        fontSize: 16,\r\n        color: '#1890ff',\r\n      }}\r\n    />\r\n  );\r\n  //<input type=\"text\" id=\"title\" placeholder=\"Search Play Here\" onChange={handleInputChange}></input>\r\n\r\n    return (\r\n    <div id=\"searchContainer\">\r\n\r\n      <div id=\"homeTitleInput\">\r\n      <Space>\r\n        <Search\r\n        id=\"searchBarHome\"\r\n        placeholder=\"Search Play Here\"\r\n        size=\"large\"\r\n        suffix={suffix}\r\n        onChange={handleInputChange}\r\n      />\r\n      </Space>\r\n        \r\n      </div>\r\n      <div id=\"homeButtons\">\r\n      <Link to={{pathname:\"/default\", state: {title: title }}}>\r\n        <div id=\"matchingButton\">\r\n          <button type=\"button\" data-inline=\"true\" >Show matching Plays</button>\r\n        </div>\r\n      </Link>\r\n      <Link to={{pathname:\"/default\", state: {title: '' }}}>\r\n        <div id=\"showAllButton\">\r\n          <button type=\"button\" data-inline=\"true\"  >Show All Plays</button>\r\n        </div>\r\n      </Link>\r\n      </div>\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default SearchContainer;","import React, { useEffect }from \"react\";\r\nimport SearchContainer from \"./SearchContainer\";\r\n\r\nconst HomePage = (props) => {\r\n\r\n  \r\n  {useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      console.log('This will run after 5 seconds!')\r\n    }, 5000);\r\n    clearTimeout(timer);\r\n    \r\n  }, [])}\r\n\r\n  return (\r\n\r\n\r\n      <div className=\"homePage\">\r\n        <div id=\"homeSearch\"> <SearchContainer /> \r\n        </div>\r\n        \r\n          <div id=\"heroCredit\">\r\n            Photo by{\" \"}\r\n            <a href=\"https://unsplash.com/@maxmuselmann?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">\r\n              Max Muselmann\r\n            </a>{\" \"}\r\n            on{\" \"}\r\n            <a href=\"https://unsplash.com/s/photos/shakespeare?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">\r\n              Unsplash\r\n            </a>\r\n          \r\n        </div>\r\n        \r\n      </div>\r\n  );\r\n};\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import Modal from \"react-modal\";\r\n//import ProfileModal from \"react-modal\";\r\nimport { Button, Modal, Menu, Divider } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LogoutOutlined,\r\n  PaperClipOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst HeaderBar = (props) => {\r\n  const [isProfileModalVisible, setIsProfileModalVisible] = useState(false);\r\n  const [isAboutModalVisible, setIsAboutModalVisible] = useState(false);\r\n\r\n  const showProfileModal = () => {\r\n    setIsProfileModalVisible(true);\r\n  };\r\n\r\n  const handleProfileClose = () => {\r\n    setIsProfileModalVisible(false);\r\n  };\r\n\r\n  const showAboutModal = () => {\r\n    setIsAboutModalVisible(true);\r\n  };\r\n\r\n  const handleAboutClose = () => {\r\n    setIsAboutModalVisible(false);\r\n  };\r\n  console.log(\"yes\");\r\n  console.log(props.userData);\r\n  const userAPILink = `http://comp4513-assignment2.herokuapp.com/user/${props.userData.id}`;\r\n  const current = \"menu\";\r\n\r\n  return (\r\n    <div id=\"headerBar\">\r\n      <div id=\"homeLogoButton\">\r\n        <Link to=\"/\">\r\n          <img src=\"https://img.icons8.com/office/40/000000/home--v1.png\" />\r\n        </Link>\r\n      </div>\r\n\r\n      <Menu id=\"menuDropdown\" selectedKeys={[current]} mode=\"horizontal\">\r\n        <SubMenu\r\n          key=\"SubMenu\"\r\n          icon={\r\n            <img src=\"https://img.icons8.com/office/40/000000/menu--v1.png\" />\r\n          }\r\n        >\r\n          <Menu.Item\r\n            key=\"profile\"\r\n            onClick={showProfileModal}\r\n            icon={<UserOutlined />}\r\n          >\r\n            Profile\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"about\"\r\n            onClick={showAboutModal}\r\n            icon={<PaperClipOutlined />}\r\n          >\r\n            {\" \"}\r\n            About{\" \"}\r\n          </Menu.Item>\r\n          <Divider />\r\n          <Menu.Item\r\n            key=\"logout\"\r\n            onClick={props.logout}\r\n            icon={<LogoutOutlined />}\r\n          >\r\n            {\" \"}\r\n            Logout{\" \"}\r\n          </Menu.Item>\r\n        </SubMenu>\r\n      </Menu>\r\n\r\n      <Modal\r\n        title=\"About Us\"\r\n        className=\"aboutModal\"\r\n        visible={isAboutModalVisible}\r\n        onCancel={handleAboutClose}\r\n        footer={[\r\n          <Button key=\"close\" onClick={handleAboutClose}>\r\n            {\" \"}\r\n            Close{\" \"}\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <h2>Team Members</h2>\r\n        <p>Anro Tran</p>\r\n        <p>Peter Huang</p>\r\n        <p>Mohamed Aly</p>\r\n        <h2>Github Repo</h2>\r\n        <a href=\"https://github.com/phuan516/comp4513-assignment1\">\r\n          <p>Link to Repository</p>\r\n        </a>\r\n        <h2> Links to APIs </h2>\r\n\r\n        <a href=\"http://comp4513-assignment2.herokuapp.com/api/list\">\r\n          <p>Full List of Plays</p>\r\n        </a>\r\n        <a href=\"http://comp4513-assignment2.herokuapp.com/api/play/alls_well_that_ends_well\">\r\n          <p>Specefic Plays</p>\r\n        </a>\r\n        <a href={userAPILink}>\r\n          <p>Logged in User</p>\r\n        </a>\r\n        <h2>Reference Links</h2>\r\n        <a href=\"https://blog.logrocket.com/how-to-build-tab-component-react/\">\r\n          <p>Building your own tab components</p>\r\n        </a>\r\n\r\n        <a href=\"https://stackoverflow.com/questions/24502898/show-or-hide-element-in-react\">\r\n          <p>How to hide or show elements in react</p>\r\n        </a>\r\n        <a href=\"https://www.w3schools.com/howto/tryit.asp?filename=tryhow_css_custom_scrollbar\">\r\n          <p>Custom scrollbars with webkit</p>\r\n        </a>\r\n        <a href=\"https://www.w3schools.com/howto/howto_css_full_page.asp\">\r\n          <p>How to add full page background image</p>\r\n        </a>\r\n\r\n        <a href=\"https://stackoverflow.com/questions/4137255/checkboxes-in-web-pages-how-to-make-them-bigger\">\r\n          <p>How to make checkboxes bigger with webkit</p>\r\n        </a>\r\n        <a href=\"https://expressjs.com/en/resources/middleware/cors.html\">\r\n          <p>Express cors</p>\r\n        </a>\r\n      </Modal>\r\n\r\n      <Modal\r\n        title=\"Profile\"\r\n        className=\"profileModal\"\r\n        visible={isProfileModalVisible}\r\n        onCancel={handleProfileClose}\r\n        footer={[\r\n          <Button key=\"close\" onClick={handleProfileClose}>\r\n            {\" \"}\r\n            Close{\" \"}\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p id=\"profileimg\">\r\n          {\" \"}\r\n          <img src={props.userData.picture.thumbnail} />{\" \"}\r\n        </p>\r\n        <br />\r\n        <h1>\r\n          {props.userData.details.firstname + \" \"}\r\n          {props.userData.details.lastname}\r\n        </h1>\r\n        <h2>\r\n          {props.userData.details.city + \", \"} {props.userData.details.country}\r\n        </h2>\r\n        <h2>{\"Date joined: \" + props.userData.membership.date_joined}</h2>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\nimport Axios from \"axios\";\r\n\r\nconst FavoriteItem = (props) => {\r\n  const info = () => {\r\n    props.removeFromLike(props.play);\r\n    message.info(props.play.title + \" has been removed\");\r\n  };\r\n\r\n  const updateCurrentPlay = () => {\r\n    props.updateCurrent(props.play);\r\n\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: `https://comp4513-assignment2.herokuapp.com/api/play/${props.play.id}`,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        localStorage.setItem(\"playInfo\", JSON.stringify(data));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"favoriteItem\">\r\n      <Link to=\"/playDetails\">\r\n        <p onClick={updateCurrentPlay}> {props.play.title} </p>\r\n      </Link>\r\n\r\n      <button type=\"button\" id=\"deleteButton\" onClick={info}>\r\n        Remove\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteItem;\r\n","import React from \"react\";\r\nimport FavoriteItem from \"./FavoriteItem\";\r\n\r\nconst FavoriteBox = (props) => {\r\n  return (\r\n    <div id=\"favoritesBox\">\r\n      <h1>Favorites</h1>\r\n      <hr/>\r\n      <div id=\"favoritesList\">\r\n        {props.plays.map((p, index) => (\r\n        <FavoriteItem play={p} removeFromLike={props.removeFromLike} \r\n        updateCurrent={props.updateCurrent} updateTab={props.updateTab}\r\n          key={index}/>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteBox;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst FilterBox = (props) => {\r\n  const [filter, updateFilter] = useState({});\r\n  const [beforeCheck, setBeforeCheck] = useState({status: true})\r\n  const [afterCheck, setAfterCheck] = useState({status: true});\r\n\r\nuseEffect (() => {\r\n\r\n  //if title is set from search container, apply the filter upon first render of page.\r\n  if (props.title) {\r\n    updateFilter({title: props.title})\r\n    props.updateFilteredData({title: props.title});\r\n  } else {\r\n    props.updateFilteredData({});\r\n  }\r\n}, []\r\n);\r\n  //handles all field changes.\r\n  const handleFieldClick = (e) => {\r\n\r\n    const tempStateObj = {...filter};\r\n\r\n    //if a field becomes empty, remove it from state.\r\n    if (e.target.value === '' ) {\r\n        delete tempStateObj[e.target.name];\r\n    } else {\r\n    //undergo necessary state updates.\r\n    tempStateObj[e.target.name] = e.target.value;\r\n\r\n    //If it is for the before or after fields, must update the before and after states as these are distinct\r\n    //due to their checkbox functionality/processing.\r\n\r\n     if (e.target.name === 'before') {\r\n        setBeforeCheck({status: false, value: e.target.value })\r\n     }\r\n\r\n      if (e.target.name === 'after') {\r\n       setAfterCheck({status: false, value: e.target.value  })\r\n     }\r\n    \r\n    }\r\n \r\n    //update filter state.\r\n    updateFilter(tempStateObj);\r\n\r\n  }\r\n\r\n  //process the form submission up when \"filter\" clicked.\r\n const handleSubmit = e => {\r\n    props.updateFilteredData(filter);\r\n    e.preventDefault(); \r\n  }\r\n\r\n  //Checkbox functionality, of enabling and disabling values entered processed.\r\n  const handleCheckBoxClick = e => {\r\n  \r\n    const tempStateObj = {...filter};\r\n\r\n    if (e.target.name === 'before' && beforeCheck.status === false) {\r\n      setBeforeCheck({status: true, value: beforeCheck.value});\r\n      delete tempStateObj['before'];\r\n      \r\n    } else  {\r\n      if (e.target.name === 'before' &&  beforeCheck.status === true) {\r\n        setBeforeCheck({status: false, value: beforeCheck.value});\r\n        tempStateObj.before = beforeCheck.value;\r\n \r\n    } else {\r\n      if (e.target.name === 'after' &&  afterCheck.status === false) { \r\n        setAfterCheck({status: true, value: afterCheck.value});\r\n        delete tempStateObj['after'];\r\n    \r\n    } else {\r\n\r\n    if (e.target.name === 'after' &&  afterCheck.status === true) {\r\n      \r\n      setAfterCheck({status: false, value: afterCheck.value});\r\n      tempStateObj.after =  afterCheck.value;\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n    updateFilter(tempStateObj);\r\n   \r\n  }\r\n\r\n  //upon reset of form fields - all state must be emptied.\r\n  const resetFilter = e => {\r\n    updateFilter({});\r\n    setBeforeCheck({status: true});\r\n    setAfterCheck({status: true});\r\n  }\r\n\r\n  const updateBoxForFave = () => {\r\n    props.updateFaveBox();\r\n    props.updateIsChecked();\r\n  }\r\n  \r\n\r\n    return (\r\n    <div id=\"filterBox\">\r\n      <div id=\"filtersAndCheck\">\r\n        <div id=\"checkBoxDiv\"> <input type=\"checkbox\" className=\"checkboxFave\" onChange={updateBoxForFave}/> </div>\r\n        <h1 id=\"filterTitle\">Play Filters</h1>\r\n      </div>\r\n      <hr/>\r\n      <div id=\"filterContentBox\">\r\n        \r\n        <form onSubmit = {handleSubmit}>\r\n          <div id=\"searchTitleBox\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <br/>\r\n            <input type=\"text\" name=\"title\" id=\"searchTitleInput\" placeholder=\"Search Title\" onChange = {handleFieldClick}></input>\r\n          </div>\r\n          <div id=\"searchYearBox\">\r\n            <label htmlFor=\"year\" id=\"yearTitle\"> Year </label> <br />\r\n\r\n            <div id=\"beforeSearch\">\r\n              <div id=\"beforeCheckBox\">\r\n                <input type=\"checkbox\" name=\"before\" onChange={handleCheckBoxClick} />\r\n              </div>\r\n              <label htmlFor=\"before\" name=\"before\" id=\"labelBefore\">\r\n                Before\r\n                <input type=\"text\" name=\"before\" id=\"inputBefore\" disabled = {beforeCheck.status} onChange = {handleFieldClick}/>\r\n              </label>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <div id=\"afterSearch\"> \r\n              <div id=\"afterCheckBox\">\r\n                <input type=\"checkbox\"  name=\"after\" onChange={handleCheckBoxClick}/> \r\n                <label htmlFor=\"after\" name=\"after\" id=\"labelAfter\"> \r\n                  After\r\n                  <input type=\"text\" name=\"after\" id=\"inputAfter\" disabled = {afterCheck.status} onChange = {handleFieldClick} />\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"genreBox\">\r\n            <label htmlFor=\"genre\">Genre</label>\r\n            <br/>\r\n            <select name=\"genre\" id=\"genre\" onChange = {handleFieldClick}>\r\n              <option  defaultValue = ''></option>\r\n              <option name = \"genre\" value=\"comedy\">comedy</option>\r\n              <option name = \"genre\" value=\"tragedy\">tragedy</option>\r\n              <option name = \"genre\" value=\"history\">history</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div id=\"filterButtons\">\r\n            <button type=\"submit\" id=\"filterButton\"> Filter </button>\r\n            <button type=\"reset\" id=\"clearButton\" onClick={resetFilter}> Clear </button>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n  </div>\r\n    \r\n    );\r\n    \r\n};\r\n\r\nexport default FilterBox;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Axios from \"axios\";\r\n\r\nconst ListBoxItem = (props) => {\r\n  const add = () => {\r\n    props.addToLike(props.play);\r\n  };\r\n\r\n  const currentPlay = () => {\r\n    props.updateCurrent(props.play);\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: `https://comp4513-assignment2.herokuapp.com/api/play/${props.play.id}`,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        localStorage.setItem(\"playInfo\", JSON.stringify(data));\r\n      });\r\n  };\r\n\r\n  const userInfo = { userData: props.userData, logout: props.logout };\r\n\r\n  return (\r\n    <div id=\"listBoxItems\">\r\n      <p id=\"playInfoTitle\">{props.play.title}</p>\r\n      <p id=\"playDate\">{props.play.likelyDate}</p>\r\n      <div id=\"playListButtons\">\r\n        <CSSTransition\r\n          in={true}\r\n          timeout={10000}\r\n          classNames=\"fade\"\r\n          appear={true}\r\n        >\r\n          <button type=\"button\" id=\"likeButton\" onClick={add}>\r\n            ❤\r\n          </button>\r\n        </CSSTransition>\r\n        <Link to={{ pathname: \"/playDetails\", state: { userInfo: userInfo } }}>\r\n          <button type=\"button\" id=\"viewButton\" onClick={currentPlay}>\r\n            View\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListBoxItem;\r\n","import React from \"react\";\r\nimport ListBoxItem from \"./ListBoxItem\";\r\nimport styled from \"styled-components\";\r\n\r\nconst H1 = styled.h1`\r\n  font-style: italic;\r\n  color: red;\r\n`;\r\n\r\nconst ListBox = (props) => {\r\n  const sortByTitle = () => {\r\n    props.sortTitle();\r\n  };\r\n\r\n  const sortByYear = () => {\r\n    props.sortYear();\r\n  };\r\n\r\n  return (\r\n    <div id=\"listBox\">\r\n      <h1 id=\"listTitle\">List / Match</h1>\r\n      <hr />\r\n\r\n      <div id=\"listPlayInfo\">\r\n        {props.matchesBoolean === true ? (\r\n          <div>\r\n            <div id=\"listHeader\">\r\n              <h2\r\n                id=\"titleLabel\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={sortByTitle}\r\n              >\r\n                Title\r\n              </h2>{\" \"}\r\n              <h2\r\n                id=\"listLabel\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={sortByYear}\r\n              >\r\n                Year\r\n              </h2>{\" \"}\r\n              <p></p>\r\n            </div>\r\n\r\n            <div id=\"listPlayBox\">\r\n              {props.plays.map((p, index) => (\r\n                <ListBoxItem\r\n                  userData = {props.userData} \r\n                  logout = {props.logout}\r\n                  play={p}\r\n                  addToLike={props.addToLike}\r\n                  updateCurrent={props.updateCurrent}\r\n                  key={index}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <H1>No Matches Found. Please Try Again! </H1>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListBox;\r\n","import React from \"react\";\r\nimport HeaderBar from \"./HeaderBar\";\r\nimport FavoriteBox from \"./FavoritesBox\";\r\nimport FilterBox from \"./FilterBox\";\r\nimport ListBox from \"./ListBox\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst DefaultPage = (props) => {\r\n  const location = useLocation();\r\n  //check if matches are found from filter.\r\n  const [matchesFound, setMatchesFound] = useState(true);\r\n  useEffect(() => {\r\n    if (location.state.filters) {\r\n      props.setFilteredData(location.state.filters);\r\n    }\r\n  }, []);\r\n\r\n  let title = \"\";\r\n  if (location.state.title) {\r\n    title = location.state.title;\r\n  }\r\n\r\n  const updateFilteredData = (filter) => {\r\n    let updatedFilteredData = [];\r\n\r\n    if (Object.keys(filter).length === 0) {\r\n      updatedFilteredData = [...props.mainData];\r\n    } else {\r\n      //Must convert to lower case to obtain all possible matches for title, before initiating filter.\r\n      if (filter.title) {\r\n        filter.title = filter.title.toLowerCase();\r\n      }\r\n\r\n      //Loop through main data, and contrast with each filter possibility, to render all possible matches.\r\n      //Checks if each \"filter\" state object property is set, and then it can verify whether it constains a match.\r\n      props.mainData.forEach((d) => {\r\n        if (filter.title && filter.genre && filter.before && filter.after) {\r\n          if (\r\n            d.title.toLowerCase().includes(filter.title) &&\r\n            d.genre === filter.genre &&\r\n            d.likelyDate < filter.before &&\r\n            d.likelyDate > filter.after\r\n          ) {\r\n            updatedFilteredData.push(d);\r\n          }\r\n        } else {\r\n          if (filter.title && filter.genre && filter.before) {\r\n            if (\r\n              d.title.toLowerCase().includes(filter.title) &&\r\n              d.genre === filter.genre &&\r\n              d.likelyDate < filter.before\r\n            ) {\r\n              updatedFilteredData.push(d);\r\n            }\r\n          } else {\r\n            if (filter.title && filter.before && filter.after) {\r\n              if (\r\n                d.title.toLowerCase().includes(filter.title) &&\r\n                d.likelyDate < filter.before &&\r\n                d.likelyDate > filter.after\r\n              ) {\r\n                updatedFilteredData.push(d);\r\n              }\r\n            } else {\r\n              if (filter.title && filter.after && filter.genre) {\r\n                if (\r\n                  d.title.toLowerCase().includes(filter.title) &&\r\n                  d.likelyDate > filter.after &&\r\n                  d.genre === filter.genre\r\n                ) {\r\n                  updatedFilteredData.push(d);\r\n                }\r\n              } else {\r\n                if (filter.genre && filter.before && filter.after) {\r\n                  if (\r\n                    d.genre === filter.genre &&\r\n                    d.likelyDate < filter.before &&\r\n                    d.likelyDate > filter.after\r\n                  ) {\r\n                    updatedFilteredData.push(d);\r\n                  }\r\n                } else {\r\n                  if (filter.title && filter.genre) {\r\n                    if (\r\n                      d.title.toLowerCase().includes(filter.title) &&\r\n                      d.genre === filter.genre\r\n                    ) {\r\n                      updatedFilteredData.push(d);\r\n                    }\r\n                  } else {\r\n                    if (filter.title && filter.after) {\r\n                      if (\r\n                        d.title.toLowerCase().includes(filter.title) &&\r\n                        d.likelyDate > filter.after\r\n                      ) {\r\n                        updatedFilteredData.push(d);\r\n                      }\r\n                    } else {\r\n                      if (filter.title && filter.before) {\r\n                        if (\r\n                          d.title.toLowerCase().includes(filter.title) &&\r\n                          d.likelyDate < filter.before\r\n                        ) {\r\n                          updatedFilteredData.push(d);\r\n                        }\r\n                      } else {\r\n                        if (filter.genre && filter.before) {\r\n                          if (\r\n                            d.genre === filter.genre &&\r\n                            d.likelyDate < filter.before\r\n                          ) {\r\n                            updatedFilteredData.push(d);\r\n                          }\r\n                        } else {\r\n                          if (filter.genre && filter.after) {\r\n                            if (\r\n                              d.genre === filter.genre &&\r\n                              d.likelyDate > filter.after\r\n                            ) {\r\n                              updatedFilteredData.push(d);\r\n                            }\r\n                          } else {\r\n                            if (filter.before && filter.after) {\r\n                              if (\r\n                                d.likelyDate < filter.before &&\r\n                                d.likelyDate > filter.after\r\n                              ) {\r\n                                updatedFilteredData.push(d);\r\n                              }\r\n                            } else {\r\n                              if (filter.genre) {\r\n                                if (d.genre === filter.genre) {\r\n                                  updatedFilteredData.push(d);\r\n                                }\r\n                              } else {\r\n                                if (filter.title) {\r\n                                  if (\r\n                                    d.title.toLowerCase().includes(filter.title)\r\n                                  ) {\r\n                                    updatedFilteredData.push(d);\r\n                                  }\r\n                                } else {\r\n                                  if (filter.before) {\r\n                                    if (d.likelyDate < filter.before) {\r\n                                      updatedFilteredData.push(d);\r\n                                    }\r\n                                  } else {\r\n                                    if (filter.after) {\r\n                                      if (d.likelyDate > filter.after) {\r\n                                        updatedFilteredData.push(d);\r\n                                      }\r\n                                    }\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if (updatedFilteredData.length === 0) {\r\n      setMatchesFound(false);\r\n    } else {\r\n      setMatchesFound(true);\r\n    }\r\n\r\n    props.setFilteredData(updatedFilteredData);\r\n  };\r\n\r\n  const [sortedPlays, setsortedPlays] = useState(props.plays);\r\n\r\n  const sortTitle = () => {\r\n    let sortData = props.plays.sort((a, b) => {\r\n      let at = a.title.toLowerCase();\r\n      let bt = b.title.toLowerCase();\r\n\r\n      if (at < bt) {\r\n        return -1;\r\n      }\r\n      if (at > bt) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    setsortedPlays(sortData);\r\n    console.log([...sortData]);\r\n  };\r\n  const sortYear = () => {\r\n    let sortData = props.plays.sort((a, b) => {\r\n      let ay = parseInt(a.likelyDate, 10);\r\n      let by = parseInt(b.likelyDate, 10);\r\n\r\n      if (ay < by) {\r\n        return -1;\r\n      }\r\n      if (ay > by) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    setsortedPlays([...sortData]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"defaultPage\">\r\n      <HeaderBar userData={props.userData} logout={props.logout} />\r\n      <div id=\"defaultPageInfoBox\">\r\n        {props.showFavorites && props.isChecked === false ? (\r\n          <div id=\"defaultFavoriteBox\">\r\n            {\" \"}\r\n            <FavoriteBox\r\n              plays={props.likedPlays}\r\n              removeFromLike={props.removeFromLike}\r\n              updateCurrent={props.updateCurrent}\r\n            />{\" \"}\r\n          </div>\r\n        ) : (\r\n          <div id=\"hiddenFaveBox\"> </div>\r\n        )}\r\n\r\n        <FilterBox\r\n          updateFilteredData={updateFilteredData}\r\n          title={title}\r\n          matchesFound={matchesFound}\r\n          updateIsChecked={props.updateIsChecked}\r\n          updateFaveBox={props.updateFaveBox}\r\n        />\r\n        <ListBox\r\n          userData={props.userData}\r\n          logout={props.logout}\r\n          plays={props.plays}\r\n          addToLike={props.addToLike}\r\n          removeFromLike={props.removeFromLike}\r\n          updateCurrent={props.updateCurrent}\r\n          matchesBoolean={matchesFound}\r\n          sortTitle={sortTitle}\r\n          sortYear={sortYear}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DefaultPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { message } from \"antd\";\r\nimport Axios from \"axios\";\r\n\r\nconst FavoriteItemDetails = (props) => {\r\n  const info = () => {\r\n    props.removeFromLike(props.play);\r\n    message.info(props.play.title + \" has been removed\");\r\n  };\r\n\r\n  const updateCurrentPlay = () => {\r\n    props.updateCurrent(props.play);\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: `https://comp4513-assignment2.herokuapp.com/api/play/${props.play.id}`,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        localStorage.setItem(\"playInfo\", JSON.stringify(data));\r\n      });\r\n\r\n    props.updateTab();\r\n  };\r\n\r\n  return (\r\n    <div id=\"favoriteItem\">\r\n      <Link to=\"/playDetails\">\r\n        <p onClick={updateCurrentPlay}> {props.play.title} </p>\r\n      </Link>\r\n\r\n      <button type=\"button\" id=\"deleteButton\" onClick={info}>\r\n        Remove\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteItemDetails;\r\n","import React from \"react\";\r\nimport FavoriteItemDetails from \"./FavoriteItemDetails\";\r\n\r\nconst FavoriteBoxDetails = (props) => {\r\n  return (\r\n    <div id=\"favoritesBox\">\r\n      <h1>Favorites</h1>\r\n      <hr/>\r\n      <div id=\"favoritesList\">\r\n        {props.plays.map((p, index) => (\r\n        <FavoriteItemDetails play={p} removeFromLike={props.removeFromLike} \r\n        updateCurrent={props.updateCurrent} updateTab={props.updateTab}\r\n          key={index}/>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteBoxDetails;\r\n","import React from \"react\";\r\n\r\nconst DetailsTab = (props) => {\r\n  return (\r\n    <div className=\"DetailsTab\">\r\n      <h1> Play Info </h1>\r\n      <p> Likely date of composition: {props.current.likelyDate}</p>\r\n      <p> Genre: {props.current.genre}</p>\r\n      <h1> Web Links</h1>\r\n      <p> Wiki Link: {props.current.wiki}</p>\r\n      <p> Gutenberg Link: {props.current.gutenberg}</p>\r\n      <p> Shakespear.org Link: {props.current.shakespeareOrg}</p>\r\n      <h1> Description </h1>\r\n      <p> {props.current.desc} </p>\r\n    </div>\r\n  );\r\n};\r\nexport default DetailsTab;\r\n","import React from \"react\";\r\n\r\nconst CharactersTab = (props) => {  \r\n\r\n  let i = [];\r\n  i = JSON.parse(localStorage.getItem(\"playInfo\"));\r\n  const personas = i.persona;\r\n\r\n  return (\r\n    <div className=\"CharactersTab\">\r\n      {personas.map((p, index) => {\r\n        return (\r\n          <div className=\"allPlayers\" key={index}>\r\n            <p key={index} className=\"position\">\r\n              Position: {p.position}\r\n            </p>\r\n            <p key={p.player} className=\"player\">\r\n              {\" \"}\r\n              {p.player}{\" \"}\r\n            </p>\r\n            <p key={p.desc} className=\"desc\">\r\n              {\" \"}\r\n              {p.desc}{\" \"}\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default CharactersTab;\r\n","import React from \"react\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nconst TextTab = (props) => {\r\n\r\n  if (props.currentSpeaker === \"\") {\r\n    return (\r\n      <div className=\"TextTab\">\r\n        <h1>{props.playInfo.title}</h1>\r\n        <h2> {props.currentAct}</h2>\r\n        <h3> {props.currentScene}</h3>\r\n        <hr></hr>\r\n        <div id=\"sceneSpeeches\">\r\n          {props.playInfo.acts.map((a) => {\r\n            if (a.name === props.currentAct) {\r\n              return a.scenes.map((s, index) => {\r\n                if (s.name === props.currentScene) {\r\n                  return (\r\n                    <div id=\"actSceneDirection\" key={index}>\r\n                      <h4> {s.title} </h4>\r\n                      <h4> {s.stageDirection}</h4>\r\n                    </div>\r\n                  );\r\n                }\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    \r\n    return (\r\n      <div className=\"TextTab\">\r\n        <h1>{props.playInfo.title}</h1>\r\n        <h2> {props.currentAct}</h2>\r\n        <h3> {props.currentScene}</h3>\r\n        <hr></hr>\r\n        <div id=\"speakerSpeeches\">\r\n          {props.playInfo.acts.map((a) => {\r\n            if (a.name === props.currentAct) {\r\n              return a.scenes.map((s) => {\r\n                if (s.name === props.currentScene) {\r\n                  return s.speeches.map((speeches, index) => {\r\n                    if (speeches.speaker === props.currentSpeaker) {\r\n                      return (\r\n                        <div key={index}>\r\n                          <Highlighter\r\n                            searchWords={[props.highlightedWord]}\r\n                            textToHighlight={String(speeches.speaker)}\r\n                          />:\r\n                          <br /> \r\n                          <Highlighter\r\n                            searchWords={[props.highlightedWord]}\r\n                            textToHighlight={String(speeches.lines)}\r\n                          />\r\n                          <br /> <br />\r\n                        </div>\r\n                      );\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default TextTab;\r\n","import React from \"react\";\r\nimport DetailsTab from \"./DetailsTab\";\r\nimport CharactersTab from \"./CharactersTab\";\r\nimport TextTab from \"./TextTab\";\r\n\r\n\r\nconst Tabs = (props) => {\r\n  const handleDetailsTab = () => {\r\n    props.tabIsText(\"Details\");\r\n  };\r\n\r\n  const handleCharactersTab = () => {\r\n    props.tabIsText(\"Characters\");\r\n  };\r\n\r\n  const handleTextTab = () => {\r\n    props.tabIsText(\"Text\");\r\n  };\r\n\r\n  if (props.current.filename === \"\") {\r\n    return (\r\n      <div className=\"Tabs\">\r\n        <ul className=\"nav\">\r\n          <li className={props.tab === \"Details\" ? \"active\" : \"\"}>Details</li>\r\n        </ul>\r\n        <div className=\"outlet\">\r\n          <DetailsTab current={props.current} />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n\r\n    return (\r\n      <div className=\"Tabs\">\r\n        <ul className=\"nav\">\r\n          <li\r\n            className={props.tab === \"Details\" ? \"active\" : \"\"}\r\n            onClick={handleDetailsTab}\r\n          >\r\n            {\" \"}\r\n            Details\r\n          </li>\r\n          <li\r\n            className={props.tab === \"Characters\" ? \"active\" : \"\"}\r\n            onClick={handleCharactersTab}\r\n          >\r\n            {\" \"}\r\n            Characters\r\n          </li>\r\n          <li\r\n            className={props.tab === \"Text\" ? \"active\" : \"\"}\r\n            onClick={handleTextTab}\r\n          >\r\n            {\" \"}\r\n            Text\r\n          </li>\r\n        </ul>\r\n        <div id=\"tabHR\"> <hr></hr> </div>\r\n        \r\n        <div className=\"outlet\">\r\n          {props.tab === \"Details\" ? (\r\n            <DetailsTab current={props.current} />\r\n          ) : props.tab === \"Characters\" ? (\r\n            <CharactersTab current={props.current}/>\r\n          ) : props.tab === \"Text\" ? (\r\n            <TextTab\r\n              current={props.current}\r\n              playInfo={JSON.parse(localStorage.getItem(\"playInfo\"))}\r\n              //playInfo={props.playInfo}\r\n              currentAct={props.currentAct}\r\n              currentScene={props.currentScene}\r\n              currentSpeaker={props.currentSpeaker}\r\n              highlightedWord={props.highlightedWord}\r\n\r\n            />\r\n          ) : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n/* From https://blog.logrocket.com/how-to-build-tab-component-react/*/\r\n\r\nexport default Tabs;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HeaderBar from \"./HeaderBar\";\r\nimport FavoriteBoxDetails from \"./FavoritesBoxDetails\";\r\nimport Tabs from \"./TabComponent/Tabs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"../App.css\";\r\n\r\nconst PlayDetailPage = (props) => {\r\n  const [tab, setTab] = useState(\"Details\");\r\n  const [currentAct, setCurrentAct] = useState(\"ACT I\");\r\n  const [currentScene, setCurrentScene] = useState(\"SCENE I\");\r\n  const [currentSpeaker, setCurrentSpeaker] = useState(\"\");\r\n  const [highlightedWord, setHighlightedWord] = useState(\"\");\r\n\r\n  const location = useLocation();\r\n\r\n  const tabIsText = (tab) => {\r\n    setTab(tab);\r\n  };\r\n\r\n  const updateTabThroughClick = () => {\r\n    setTab(\"Details\");\r\n  };\r\n\r\n  const handleCurrentAct = (e) => {\r\n    console.log(e.target.value);\r\n    setCurrentAct(e.target.value);\r\n  };\r\n\r\n  const handleCurrentScene = (e) => {\r\n    console.log(e.target.value);\r\n    setCurrentScene(e.target.value);\r\n  };\r\n\r\n  const handleCurrentSpeaker = (e) => {\r\n    if (e.target.value !== \"\" && e.target.value !== \"clear\") {\r\n      console.log(e.target.value);\r\n      setCurrentSpeaker(e.target.value);\r\n    } else if (e.target.value === \"clear\") {\r\n      setCurrentSpeaker(\"\");\r\n      console.log(\"Search is cleared -->\" + e.target.value);\r\n    }\r\n  };\r\n\r\n  const addToLike = () => {\r\n    props.addToLike(props.current);\r\n  };\r\n\r\n  const handleHighlightedWord = (e) => {\r\n    console.log(e.target.value);\r\n    setHighlightedWord(e.target.value);\r\n  };\r\n\r\n  useEffect((props) => {\r\n    const getInfo = async () => {\r\n      try {\r\n        const url = `https://comp4513-assignment2.herokuapp.com/api/play/${props.current.id}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        localStorage.setItem(\"playInfo\", JSON.stringify(data));\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    // invoke the async function\r\n    getInfo();\r\n  }, []);\r\n\r\n  const updateBoxForFave = () => {\r\n    props.updateFaveBox();\r\n    props.updateIsChecked();\r\n  };\r\n\r\n  if (tab === \"Text\") {\r\n    let i = [];\r\n    i.push(JSON.parse(localStorage.getItem(\"playInfo\")));\r\n\r\n    return (\r\n      <div className=\"playDetailsPage\">\r\n        <HeaderBar\r\n          userData={location.state.userInfo.userData}\r\n          // logout={location.state.userInfo.logout}\r\n        />\r\n\r\n        <div id=\"playDetailsBox\">\r\n          {props.showFavorites && props.isChecked === false ? (\r\n            <div id=\"detailsFavoriteList\">\r\n              <FavoriteBoxDetails\r\n                plays={props.likedPlays}\r\n                removeFromLike={props.removeFromLike}\r\n                updateCurrent={props.updateCurrent}\r\n                updateTab={updateTabThroughClick}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div id=\"hiddenFaveBox\"> </div>\r\n          )}\r\n\r\n          <div id=\"playTitleBox\">\r\n            <div id=\"checkAndTitle\">\r\n              <div id=\"checkBoxDiv\">\r\n                {\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"checkboxFave\"\r\n                  onChange={updateBoxForFave}\r\n                />{\" \"}\r\n              </div>\r\n              <h1 id=\"playTitle\">{props.current.title}</h1>\r\n            </div>\r\n\r\n            <hr></hr>\r\n\r\n            <div id=\"formBox\">\r\n              <form id=\"textFilterBox\">\r\n                {/* This handles the act filter and adds current act*/}\r\n\r\n                <select name=\"act\" id=\"act\" onChange={handleCurrentAct}>\r\n                  {i[0].acts.map((a) => {\r\n                    return (\r\n                      <option value={a.name} key={a.name}>\r\n                        {\" \"}\r\n                        {a.name}{\" \"}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n\r\n                {/* This handles the scene filter corresponding to the act*/}\r\n                <select name=\"scene\" id=\"scene\" onChange={handleCurrentScene}>\r\n                  {i[0].acts.map((act) => {\r\n                    if (act.name === currentAct) {\r\n                      return act.scenes.map((s) => {\r\n                        return (\r\n                          <option value={s.name} key={s.name}>\r\n                            {\" \"}\r\n                            {s.name}{\" \"}\r\n                          </option>\r\n                        );\r\n                      });\r\n                    }\r\n                  })}\r\n                </select>\r\n              </form>\r\n\r\n              <form className=\"playerSearch\">\r\n                {/* This handles the word filter corresponding to the speaker*/}\r\n                <select\r\n                  name=\"speaker\"\r\n                  id=\"speaker\"\r\n                  onChange={handleCurrentSpeaker}\r\n                >\r\n                  <option value=\"\"> Choose Player Here </option>\r\n                  {i[0].persona.map((p) => {\r\n                    return (\r\n                      <option value={p.player} key={p.player}>\r\n                        {\" \"}\r\n                        {p.player}{\" \"}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                  <option value=\"clear\"> CLEAR SEARCH </option>\r\n                </select>\r\n                <br />\r\n                <input\r\n                  id=\"highlightedWord\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={handleHighlightedWord}\r\n                />\r\n              </form>\r\n            </div>\r\n            <div id=\"textPlayDetailsButtons\">\r\n              <Link\r\n                to={{ pathname: \"/default\", state: { filters: props.filters } }}\r\n              >\r\n                <button type=\"button\" id=\"closeButton\">\r\n                  {\" \"}\r\n                  Close{\" \"}\r\n                </button>\r\n              </Link>\r\n              <button onClick={addToLike} id=\"likeButton\">\r\n                {\" \"}\r\n                ❤{\" \"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"tabsBox\">\r\n            <Tabs\r\n              current={props.current}\r\n              tab={tab}\r\n              tabIsText={tabIsText}\r\n              currentAct={currentAct}\r\n              currentScene={currentScene}\r\n              currentSpeaker={currentSpeaker}\r\n              highlightedWord={highlightedWord}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"playDetailsPage\">\r\n        <HeaderBar\r\n          userData={location.state.userInfo.userData}\r\n          logout={location.state.userInfo.logout}\r\n        />\r\n\r\n        <div id=\"playDetailsBox\">\r\n          {props.showFavorites && props.isChecked === false ? (\r\n            <div id=\"detailsFavoriteList\">\r\n              <FavoriteBoxDetails\r\n                plays={props.likedPlays}\r\n                removeFromLike={props.removeFromLike}\r\n                updateCurrent={props.updateCurrent}\r\n                updateTab={updateTabThroughClick}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div id=\"hiddenFaveBox\"> </div>\r\n          )}\r\n\r\n          <div id=\"playTitleBox\">\r\n            <div id=\"checkAndTitle\">\r\n              <div id=\"checkBoxDiv\">\r\n                {\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"checkboxFave\"\r\n                  onChange={updateBoxForFave}\r\n                />{\" \"}\r\n              </div>\r\n              <h1 id=\"playTitle\">{props.current.title}</h1>\r\n            </div>\r\n            <hr></hr>\r\n            <div id=\"playSummaryBox\">\r\n              <div id=\"synopsisBox\">{props.current.synopsis}</div>\r\n\r\n              <div id=\"playDetailsButtons\">\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/default\",\r\n                    state: { filters: props.filters },\r\n                  }}\r\n                >\r\n                  <button type=\"button\" id=\"closeButton\">\r\n                    {\" \"}\r\n                    Close{\" \"}\r\n                  </button>\r\n                </Link>\r\n                <button onClick={addToLike} id=\"likeButton\">\r\n                  {\" \"}\r\n                  ❤{\" \"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"tabsBox\">\r\n            <Tabs\r\n              current={props.current}\r\n              tab={tab}\r\n              tabIsText={tabIsText}\r\n              currentAct={currentAct}\r\n              currentScene={currentScene}\r\n              currentSpeaker={currentSpeaker}\r\n              highlightedWord={highlightedWord}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default PlayDetailPage;\r\n","import HomePage from \"./components/HomePage\";\r\nimport DefaultPage from \"./components/DefaultPage\";\r\nimport PlayDetailPage from \"./components/PlayDetailPage\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [userData, setUserData] = useState(null);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [like, setLike] = useState([]);\r\n  const [currentPlay, setCurrentPlay] = useState([]);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [showFavorites, setShowFavorites] = useState(true);\r\n\r\n  const logout = () => {\r\n    window.location.assign(\"https://comp4513-assignment2.herokuapp.com/logout\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"https://comp4513-assignment2.herokuapp.com/user\",\r\n    }).then((res) => {\r\n      setUserData(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const populateAllPlays = () => {\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"https://comp4513-assignment2.herokuapp.com/api/list\",\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      localStorage.setItem(\"playData\", JSON.stringify(res.data));\r\n      setData(res.data);\r\n      console.log(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    populateAllPlays();\r\n\r\n    if (localStorage.getItem(\"playData\") == null) {\r\n      populateAllPlays();\r\n    } else {\r\n      setData(JSON.parse(localStorage.getItem(\"playData\")));\r\n    }\r\n  }, []);\r\n\r\n  const addLikes = (play) => {\r\n    let temp = [...like];\r\n    if (!temp.find((e) => e.title === play.title)) {\r\n      temp.push(play);\r\n      setLike(temp);\r\n    } else {\r\n      console.log(\"already in list\");\r\n    }\r\n  };\r\n\r\n  const removeLikes = (play) => {\r\n    const temp = [...like];\r\n    const index = temp.indexOf(play);\r\n    temp.splice(index, 1);\r\n    setLike(temp);\r\n  };\r\n\r\n  const updateCurrentPlay = (clickedPlay) => {\r\n    setCurrentPlay(clickedPlay);\r\n  };\r\n\r\n  const updateIsChecked = () => {\r\n    setIsChecked(!isChecked);\r\n  };\r\n\r\n  const updateFaveBox = () => {\r\n    setShowFavorites(!showFavorites);\r\n  };\r\n  console.log(userData);\r\n  return (\r\n    <main>\r\n      <HashRouter basename=\"/\">\r\n        <Route path=\"/\" exact component={HomePage} />\r\n        <Route path=\"/home\" exact component={HomePage} />\r\n        <Route path=\"/default\">\r\n          <DefaultPage\r\n            mainData={data}\r\n            userData={userData}\r\n            logout={logout}\r\n            setFilteredData={setFilteredData}\r\n            plays={filteredData}\r\n            likedPlays={like}\r\n            addToLike={addLikes}\r\n            removeFromLike={removeLikes}\r\n            updateCurrent={updateCurrentPlay}\r\n            current={currentPlay}\r\n            isChecked={isChecked}\r\n            updateIsChecked={updateIsChecked}\r\n            showFavorites={showFavorites}\r\n            updateFaveBox={updateFaveBox}\r\n          />\r\n        </Route>\r\n        <Route path=\"/playDetails\">\r\n          <PlayDetailPage\r\n            plays={data}\r\n            likedPlays={like}\r\n            addToLike={addLikes}\r\n            removeFromLike={removeLikes}\r\n            current={currentPlay}\r\n            updateCurrent={updateCurrentPlay}\r\n            filters={filteredData}\r\n            isChecked={isChecked}\r\n            updateIsChecked={updateIsChecked}\r\n            showFavorites={showFavorites}\r\n            updateFaveBox={updateFaveBox}\r\n          />\r\n        </Route>\r\n      </HashRouter>\r\n    </main>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}